$date
	Mon Jul 01 23:52:49 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Fixed_Point_Unit_Testbench $end
$var wire 32 ! fpu_result [31:0] $end
$var wire 1 " fpu_ready $end
$var parameter 32 # CLK_PERIOD $end
$var reg 1 $ clk $end
$var reg 32 % operand_1 [31:0] $end
$var reg 32 & operand_2 [31:0] $end
$var reg 2 ' operation [1:0] $end
$var reg 1 ( reset $end
$scope module uut $end
$var wire 1 $ clk $end
$var wire 32 ) operand_1 [31:0] $end
$var wire 32 * operand_2 [31:0] $end
$var wire 2 + operation [1:0] $end
$var wire 1 ( reset $end
$var wire 32 , mul_result [31:0] $end
$var parameter 32 - FBITS $end
$var parameter 32 . WIDTH $end
$var reg 32 / P1 [31:0] $end
$var reg 32 0 P2 [31:0] $end
$var reg 32 1 P3 [31:0] $end
$var reg 32 2 P4 [31:0] $end
$var reg 16 3 mul_op1 [15:0] $end
$var reg 16 4 mul_op2 [15:0] $end
$var reg 3 5 mul_state [2:0] $end
$var reg 64 6 product [63:0] $end
$var reg 1 7 product_ready $end
$var reg 1 " ready $end
$var reg 32 8 result [31:0] $end
$var reg 32 9 root [31:0] $end
$var reg 1 : root_ready $end
$scope module multiplier $end
$var wire 16 ; operand_1 [15:0] $end
$var wire 16 < operand_2 [15:0] $end
$var reg 32 = product [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 .
b1010 -
b100 #
$end
#0
$dumpvars
b0 =
b0 <
b0 ;
x:
bx 9
bz 8
07
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 ,
bx +
bx *
bx )
1(
bx '
bx &
bx %
1$
0"
bz !
$end
#2
0$
#4
1$
#6
0$
#8
1$
#10
0$
#12
0(
1$
#14
0$
#16
1$
#18
0$
#20
1"
b1111011000000 !
b1111011000000 8
b0 '
b0 +
b1000001000000 &
b1000001000000 *
b111010000000 %
b111010000000 )
1$
#22
0$
#24
0"
bz !
bz 8
bz '
bz +
bz &
bz *
bz %
bz )
1$
#26
0$
#28
1"
b100010000000 !
b100010000000 8
b1 '
b1 +
b11000000000 &
b11000000000 *
b111010000000 %
b111010000000 )
1$
#30
0$
#32
0"
bz !
bz 8
bz '
bz +
bz &
bz *
bz %
bz )
1$
#34
0$
#36
b10101110000000000000000 ,
b10101110000000000000000 =
b0 !
b0 8
b1 5
b11000000000 4
b11000000000 <
b111010000000 3
b111010000000 ;
b10 '
b10 +
b11000000000 &
b11000000000 *
b111010000000 %
b111010000000 )
1$
#38
0$
#40
b0 ,
b0 =
b10 5
b0 3
b0 ;
b10101110000000000000000 /
1$
#42
0$
#44
b11 5
b0 4
b0 <
b111010000000 3
b111010000000 ;
1$
#46
0$
#48
b100 5
b0 3
b0 ;
1$
#50
0$
#52
b101 5
1$
#54
0$
#56
1"
b1010111000000 !
b1010111000000 8
b0 5
17
b10101110000000000000000 6
1$
#58
0$
#60
0"
bz !
bz 8
bz '
bz +
bz &
bz *
bz %
bz )
1$
#62
0$
#64
x"
bx !
bx 8
b11 '
b11 +
b11100110000000000 %
b11100110000000000 )
1$
#66
0$
#68
1$
#70
0$
#72
1$
#74
0$
#76
0"
bz !
bz 8
bz '
bz +
bz %
bz )
1$
#78
0$
#80
1$
#82
0$
#84
1$
#86
0$
#88
1$
#90
0$
#92
1$
#94
0$
#96
1$
#98
0$
#100
1$
#102
0$
#104
1$
#106
0$
#108
1$
#110
0$
#112
1$
#114
0$
#116
$dumpoff
bx =
bx <
bx ;
x:
bx 9
bx 8
x7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx ,
bx +
bx *
bx )
x(
bx '
bx &
bx %
x$
x"
bx !
$end
1$
